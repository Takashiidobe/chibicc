diff --git a/Makefile b/Makefile
index 6df31b5..e2b2d94 100644
--- a/Makefile
+++ b/Makefile
@@ -13,7 +13,8 @@ $(BIN): $(SRCS)
 
 $(TESTS_BUILD_DIR)/%: $(BIN) test/%.c
 	@mkdir -p $(TESTS_BUILD_DIR)
-	$(CC) -o- -E -P -C test/$*.c | $(BIN) -o $(TESTS_BUILD_DIR)/$*.s -
+	$(CC) -o $(TESTS_BUILD_DIR)/$*.p.c -E -P -C test/$*.c
+	$(BIN) -o $(TESTS_BUILD_DIR)/$*.s $(TESTS_BUILD_DIR)/$*.p.c
 	$(CC) -o $@ $(TESTS_BUILD_DIR)/$*.s -xc test/common
 
 test: $(TESTS)
diff --git a/src/codegen.rs b/src/codegen.rs
index 8319201..a237abe 100644
--- a/src/codegen.rs
+++ b/src/codegen.rs
@@ -133,6 +133,7 @@ impl<'a> Codegen<'a> {
                     }
                 }
                 wln!(self, "{}:", name);
+                wln!(self, ".loc 1 {} {}", body.loc.line, body.loc.column);
 
                 // Prologue
                 wln!(self, "  push %rbp");
@@ -166,6 +167,7 @@ impl<'a> Codegen<'a> {
     }
 
     fn stmt(&mut self, node: &StmtNode) {
+        wln!(self, "  .loc 1 {} {}", node.loc.line, node.loc.column);
         match node.kind {
             StmtKind::Expr(ref expr) => self.expr(expr),
             StmtKind::Return(ref expr) => {
@@ -213,6 +215,7 @@ impl<'a> Codegen<'a> {
     }
 
     fn expr(&mut self, node: &ExprNode) {
+        wln!(self, "  .loc 1 {} {}", node.loc.line, node.loc.column);
         match &node.kind {
             ExprKind::Num(val) => wln!(self, "  mov ${}, %rax", val),
             ExprKind::Neg(expr) => {
diff --git a/src/main.rs b/src/main.rs
index 67a0c90..405255f 100644
--- a/src/main.rs
+++ b/src/main.rs
@@ -1,7 +1,7 @@
 #[macro_use]
 extern crate lazy_static;
 
-use std::{env, fs::{read, File}, io::{stdin, Read}, process::exit};
+use std::{env, fs::{read, File}, io::{stdin, Write, Read}, process::exit};
 
 use context::Context;
 
@@ -91,6 +91,8 @@ fn main() {
 
     let mut out = File::create(out_filename).unwrap();
 
+    writeln!(out, ".file 1 \"{}\"", in_filename).unwrap();
+
     let mut codegen = Codegen::new(&ctx, &mut out, su);
     codegen.program();
 }
